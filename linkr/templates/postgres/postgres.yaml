apiVersion: apps/v1
kind: Deployment

metadata:
  name: postgres

spec:
  # The selector is how the deployment finds which pods to manage (should be the same as the template)
  selector:
    matchLabels:
      app: postgres

  # Template used to create new pods
  template:
    metadata:
      labels:
        app: postgres

    spec:
      # Use the following containeres:
      containers:
        # A recent Postgres image based on alpine
        - name: postgres
          image: {{ .Values.postgres.image }}
          imagePullPolicy: "IfNotPresent"

          # Add data from the ConfigMap & Secret
          envFrom:
            - configMapRef:
                name: postgres-config
          env:
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD

          # Mount at standard postgres path
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdb

          # Which ports to expose on
          ports:
            - containerPort: {{ .Values.postgres.port }}

      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: postgres-pvc
